app.bringToFront();

function hideLayers() {
    hideLayerLoop(app.activeDocument);
}

function hideLayerLoop(layerNode) {
    if (layerNode == undefined) {
        return undefined;
    }
    for (var j = 0; j < layerNode.layers.length; j += 1) {
        if (activeDocument.activeLayer == layerNode.layers[j]) {
            return true;
        }
        if (layerNode.layers[j].layers != undefined) {
            if (hideLayerLoop(layerNode.layers[j]) == true) {
                return true;
            }
        }
        layerNode.layers[j].visible = false;
    }
    return false;
}

function createLayerComp(name) {
    var desc1 = new ActionDescriptor();
    var ref1 = new ActionReference();
    ref1.putClass(app.stringIDToTypeID("compsClass"));
    desc1.putReference(app.charIDToTypeID("null"), ref1);
    var desc2 = new ActionDescriptor();
    desc2.putBoolean(app.stringIDToTypeID("useVisibility"), true);
    desc2.putBoolean(app.stringIDToTypeID("usePosition"), false);
    desc2.putBoolean(app.stringIDToTypeID("useAppearance"), false);
    desc2.putString(app.charIDToTypeID("Ttl "), name);
    desc1.putObject(app.charIDToTypeID("Usng"), app.stringIDToTypeID("compsClass"), desc2);
    executeAction(app.charIDToTypeID("Mk  "), desc1, DialogModes.NO);
}

function applyLayerComp(name) {
    var desc1 = new ActionDescriptor();
    var ref1 = new ActionReference();
    ref1.putName(app.stringIDToTypeID("compsClass"), name);
    desc1.putReference(app.charIDToTypeID("null"), ref1);
    executeAction(app.stringIDToTypeID("applyComp"), desc1, DialogModes.NO);
}

function deleteLayerComp(name) {
    try {
        var desc1 = new ActionDescriptor();
        var ref1 = new ActionReference();
        ref1.putName(app.stringIDToTypeID("compsClass"), name);
        desc1.putReference(app.charIDToTypeID("null"), ref1);
        executeAction(app.charIDToTypeID("Dlt "), desc1, DialogModes.NO);
    } catch (ex) {

    }
}

function newLayer(name) {
    var desc1 = new ActionDescriptor();
    var ref1 = new ActionReference();
    ref1.putClass(app.charIDToTypeID("Lyr "));
    desc1.putReference(app.charIDToTypeID("null"), ref1);
    var desc2 = new ActionDescriptor();
    desc2.putString(app.charIDToTypeID("Nm  "), name);
    desc1.putObject(app.charIDToTypeID("Usng"), app.charIDToTypeID("Lyr "), desc2);
    executeAction(app.charIDToTypeID("Mk  "), desc1, DialogModes.NO);
}

function mergeVisible() {
    var desc1 = new ActionDescriptor();
    desc1.putBoolean(app.charIDToTypeID("Dplc"), true);
    executeAction(app.stringIDToTypeID("mergeVisible"), desc1, DialogModes.NO);
}

function convertForSmartObject() {
    var idnewPlacedLayer = stringIDToTypeID("newPlacedLayer");
    executeAction(idnewPlacedLayer, undefined, DialogModes.NO);
}

function runLiquify() {
    try {
        var idLqFy = charIDToTypeID("LqFy");
        var desc4 = new ActionDescriptor();
        var idLqMD = charIDToTypeID("LqMD");
        desc4.putString(idLqMD, "");
        executeAction(idLqFy, desc4, DialogModes.ALL);
        return true;
    } catch (ex) {
        return false;
    }
}
var guid = function() {
    function s4() {
        return Math.floor((1 + Math.random()) * 65536).toString(16).substring(1);
    }
    return function() {
        return s4() + s4() + s4();
    };
}();

function main() {
    var layerCompName = guid();
    newLayer("Smart Liquify");
    deleteLayerComp(layerCompName);
    createLayerComp(layerCompName);
    hideLayers();
    mergeVisible();
    applyLayerComp(layerCompName);
    deleteLayerComp(layerCompName);
    activeDocument.activeLayer.visible = true;
    convertForSmartObject();
    if (runLiquify() == false) {
        activeDocument.activeLayer.remove();
    }
}
if (hasDocument() == false) {
    alert("No document open");
} else if (correctVersion() == false) {

} else {
    if (hasExpired(2018, 10, 31) == false) {
        app.activeDocument.suspendHistory("Smart Liquify", "main()");
    }
}

function correctVersion() {
    if (parseInt(app.version) < 14) {
        alert("Smart Liquify requires Photoshop CC or newer to run.");
        return false;
    }
    if (parseInt(app.version) == 15 && parseFloat(app.version) < 15.2) {
        if (File.fs == "Macintosh") {
            return confirm("WARNING!\nThere is a bug affecting this version of Photoshop CC 2014, on Mac systems involving the Liquify filter.\n(Updating to the latest version will solve this issue.)\n\nThis may cause Photoshop to crash. Please make sure that you have saved your work before continuing.\n\nDo you want to proceed anyway?");
        }
    }
    return true;
}

function hasDocument() {
    if (app.documents.length > 0) {
        return true;
    }
    return false;
}

function hasSelection() {
    try {
        var sb = activeDocument.selection.bounds;
        return true;
    } catch (e) {
        return false;
    }
}

 
function hasExpired(year, month, day) { 
    return false; 
}